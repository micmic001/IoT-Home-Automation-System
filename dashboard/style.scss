$color1:#304ffe;
$color2:#ff6d00;
$color3: #e53935;
$color4: #aa00ff;
$color5: #ffea00;
$color6: #00c853;
$sidebarHover: #cececead;
$globalTextColor: #2b2b2b;
$globalRadius: 20px;

.color1{background-color: $color1;}
.color2{background-color: $color2;}
.color3{background-color: $color3;}
.color4{background-color: $color4;}
.color5{background-color: $color5;}
.color6{background-color: $color6;}

.global-height{
    height: 100vh;
}
.global-width{
    width: 100vh;
}

body{
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.wrapper {
    display: flex;
    width: 100%;
}

#sidebar {
    border-top-right-radius: $globalRadius;
    border-bottom-right-radius: $globalRadius;
    width: 250px;
    height: 100vh;
    background: #ffffff;
    color: $globalTextColor;
    box-shadow: 1px 2px 30px 0px #b5b5b5;
    transition: all 0.3s;
    transform-origin: center left;
}

#sidebar.active{
    margin-left: -250px;
}

#body.night{
    background-color: #2b2b2b;
    color: #ffffff;
    transition: .5s;
}

.sidebar-header{
    padding: 5% 5% 0 12%;
}

.sidebar-text{
    color: $globalTextColor;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 14pt;
    font-weight: 600;
}

ul{
    padding-top: 5%;
    list-style-type: none;
    padding: 0;
    margin: 0;
}
li{
    display: flex;
    justify-content: center;
    vertical-align: middle;
    width: 100%;
    height: 5.5vh;
    transition: all .3s;
    &:hover{
        background-color: $sidebarHover;
        cursor: pointer;
    }
}

.margin-auto{
    margin: auto;
}


$size__site_content_width: 1024px;

/* Media Queries */
$media_queries : (
    'mobile'    : (max-width: 667px),
    'tablet'    : (min-width: 668px) and (max-width: $size__site_content_width),
    'desktop'   : (min-width: ($size__site_content_width + 1)),
    'retina2'   : (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi),
    'retina3'   : (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi),
    'landscape' : (orientation:landscape),
    'portrait'  : (orientation:portrait)
);

@mixin for_breakpoint($breakpoints) {
    $conditions : ();
    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append(
            $conditions,
            #{inspect(map-get($media_queries, $breakpoint))},
            comma
        );
    }

    @media #{$conditions} {
        @content;
    }

}
#masthead {
    background: white;
    border-bottom:1px solid #eee;
    height: 90px;
    padding: 0 20px;
    @include for_breakpoint(mobile desktop) {
        height:70px;
        position:fixed;
        width:100%;
        top:0;
    }
}